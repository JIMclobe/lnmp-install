关于git在本机上面的操作，用于上传代码等相关个人开源资料
关于git的操作
	1.修改.gitconfig文件
		c:/Users/Adminsitre/.gitconfig
		[gui]
			recentrepo=E:/GitHub
		[core]
			quotepath=false
		[user]
			name = JIMclobe
			email = wlh724567296@163.com
	2.生成ssh key	
		ssh-keygen-t rsa -C "wlh724567296@163.com"
		
	3.复制ssh key到GitHub里面的ssh-key
		文件位置：c:/Users/Adminsitre/.ssh/id_rsa.pub
		将里面的内容复制到 GitHub-->setting-->ssh key
		
	4.测试能够连接成功 
		ssh -T git@github.com
			
到此 表示能够正常连接到github。接下来，进行创建仓库和上传文件，代码的操作

	1.在网页上创建一个github的仓库或者用命令行创建一个仓库
		之后会生成一个网页地址
		
	2.使用下面的命令连接到创建的仓库上面
		git remote add origin 生成的网页地址
	3.当出现拒绝连接的时候 执行：git pull origin master

		git push -u origin master
			出现  master->master  表示关联成功
			
	4.把更新的文件提交上github
		git push
		
		会出现警告，但没有关系，因为文件已经上传到你的github上面了
		出现警告的原因是没有指定分支
		执行：
			
			git config --global push.default simple
			
		之后运行push就不会出现警告
		
	5.获取别人github上面的文件
		1.创建一个目录，用于方便管理下载的文件
			MKDIR(window)  cd 
			mkdir(linux)	cd 
		2.下载 git clone 对方的github仓库地址
		3.之后可以进行更新操作：
			
		
		
		如果不想用上面的git remote add origin和 git push -u origin master
		可以先在guihub上面常见一个空的仓库
		之后git clone到本地
		之后 git push上传即可
		
=================================================================================================

github的操作

	mkdir add
	cd add									#切换到当前目录
	git init								#把目录变成Git可以管理的仓库
	
	git status								#查看当前库的状态，在没有跟踪的情况下，会出现红色的文件字样，代表没有被git处理
	
	git add readme.txt						#放入上传到github的文件或者创建。
		#需要注意的是，当你将一个文件cp到这个git仓库里面或者在里面创建一个文件，完成后需要git add来将文件进行跟踪，才能传到github上面。在上传前可以先查看一下状态。
		
	git commit -m  "解释文件"				#提交文件到仓库 -m 输入的是本次的说明
		commit一次可以提交很多文件
	git push origin master 					#将本地分支提交至远程master分支

	git log								#查看历史提交记录，每个记录都会有提交的id 和日期
	git branch							#查看当前的分支，当没有创建分支的时候，只有master分支
	git branch -D 分支名				#强制删除分支
	git checkout -b 分支名				#创建分支
	git pull							#刷新 下载新的代码
	git push origin master				#上传修改的文件
	git commit -m “some message”		#提交修改
	
	
=================================================================================
总而言之
主要有以下几个步骤
将创建的仓库下载到本地： git clone
将需要的文件或者自己写的代码创建到下载的文件目录下面
cp  mkdir  touch
将文件添加到github里面
git add

查看状态
git status 

保存刚才的修改 
git commit -m “描述符”

回到主分支
git checkout master

上传修改的文件
git push origin master






	
	
	
